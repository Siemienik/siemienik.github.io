"use strict";(self.webpackChunksiemienik_com=self.webpackChunksiemienik_com||[]).push([[5395],{9423:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var r=s(5893),i=s(1151);const t={slug:"./",id:"xlsx-import",sidebar_label:"Readme",pagination_previous:"main_docs"},l="XLSX-Import",o={id:"xlsx-import/xlsx-import",title:"XLSX-Import",description:"NPMnpm codecov",source:"@site/docs/xlsx-import/001-xlsx-import-homepage.md",sourceDirName:"xlsx-import",slug:"/xlsx-import/",permalink:"/docs/xlsx-import/",draft:!1,unlisted:!1,editUrl:"https://github.com/siemienik/siemienik.github.io/edit/master/docs/xlsx-import/001-xlsx-import-homepage.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"./",id:"xlsx-import",sidebar_label:"Readme",pagination_previous:"main_docs"},sidebar:"docs",previous:{title:"Command Line (CLI)",permalink:"/docs/xlsx-renderer/cli"},next:{title:"Examples",permalink:"/docs/xlsx-import/examples"}},a={},d=[{value:"Getting Started",id:"getting-started",level:2},{value:"1. Install the package",id:"1-install-the-package",level:3},{value:"2. Declare types if using TypeScript",id:"2-declare-types-if-using-typescript",level:3},{value:"3. Write a config",id:"3-write-a-config",level:3},{value:"4. Use mappers (optional)",id:"4-use-mappers-optional",level:3},{value:"5. Import data",id:"5-import-data",level:3},{value:"Command Line Interface (CLI)",id:"command-line-interface-cli",level:2},{value:"Examples",id:"examples",level:2},{value:"Frontend frameworks",id:"frontend-frameworks",level:3},{value:"Console / CLI",id:"console--cli",level:3},{value:"Backend",id:"backend",level:3},{value:"The Configuration",id:"the-configuration",level:2},{value:"Type: <code>ListVertical</code>",id:"type-listvertical",level:3},{value:"Type: <code>SingleObject</code>",id:"type-singleobject",level:3},{value:"Mappers",id:"mappers",level:2},{value:"<code>splitMapper</code>",id:"splitmapper",level:3},{value:"<code>jsonMapper</code>",id:"jsonmapper",level:3},{value:"Support",id:"support",level:2},{value:"\u2705 Browser Support",id:"-browser-support",level:3},{value:"\u2705 NodeJS Support",id:"-nodejs-support",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"xlsx-import",children:"XLSX-Import"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.a,{href:"https://www.npmjs.com/package/xlsx-import",children:[(0,r.jsx)(n.img,{src:"https://img.shields.io/npm/l/xlsx-import",alt:"NPM"}),(0,r.jsx)(n.img,{src:"https://img.shields.io/npm/v/xlsx-import",alt:"npm"})]})," ",(0,r.jsx)(n.a,{href:"https://codecov.io/gh/Siemienik/xtoolset/tree/master/packages/xlsx-import",children:(0,r.jsx)(n.img,{src:"https://codecov.io/gh/Siemienik/xtoolset/branch/master/graph/badge.svg?flag=xlsx-import",alt:"codecov"})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["Github: ",(0,r.jsx)(n.a,{href:"https://github.com/Siemienik/XToolset/tree/master/packages/xlsx-import",children:"https://github.com/Siemienik/XToolset/.../xlsx-import"})]})}),"\n",(0,r.jsx)(n.p,{children:"Importing data from xlsx as simple as possible and map into configured data model with fully TypeScript typing support."}),"\n",(0,r.jsxs)(n.p,{children:["Part of ",(0,r.jsx)(n.strong,{children:"XToolset"})," - collection of tools makes handling spreadsheet handy, easy with great developer experience."]}),"\n",(0,r.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,r.jsx)(n.h3,{id:"1-install-the-package",children:"1. Install the package"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",metastring:"script",children:"npm i xlsx-import --save\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-declare-types-if-using-typescript",children:"2. Declare types if using TypeScript"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Book {\n    Id: number;\n    Title: string;\n    Author: string;\n}\n\ninterface Person {\n    FirstName: string;\n    SecondName: string;\n    Age: number;\n\n    EmployedIn: string;\n    IsUnemployed: boolean;\n    IsEmployed: boolean;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-write-a-config",children:"3. Write a config"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"    const config = {\n        books: {\n            type: 'list',\n            worksheet: 'Favourites',\n            columns: [\n                {\n                    index: 1, // column index (1,2,3....n); `1` for column `A`\n                    key: 'Id', // output item's field\n                    mapper: (v: string) => Number.parseInt(v) // nullable, for transformating values\n                },\n                {index: 2, key: 'Title'}, // column `B`\n                {index: 5, key: 'Author'}, // column `E`\n            ],\n            rowOffset: 1, // offset header row\n        },\n        owner: {\n            worksheet: 'About list owner',\n            type: 'object',\n            fields: [\n                {row: 2, col: 1, key: 'FirstName'}, // `A2`\n                {row: 2, col: 2, key: 'SecondName'}, // `B2`\n                {row: 3, col: 1, key: 'Age', mapper: Number.parseInt}, // `A3`\n            ]\n        },\n    };\n"})}),"\n",(0,r.jsx)(n.h3,{id:"4-use-mappers-optional",children:"4. Use mappers (optional)"}),"\n",(0,r.jsxs)(n.p,{children:["Mapper is a function that transforms values. You can use ",(0,r.jsx)(n.a,{href:"#mappers",children:"built-in mappers"})," or write your own."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { upperCaseMapper, isEmpty, isFilled, isValue } from 'xlsx-import/lib/mappers';\n\n// isValue: assert / check the value\nconst isMale = isValue(['male', 'm']);\nconst isFemale = isValue(['female', 'f']);\n\nconst config = {\n    // ...\n    owner: {\n        worksheet: 'About list owner',\n        type: 'object',\n        fields:[\n            {row: 2, col: 1, key: 'FirstName'},\n            {row: 2, col: 2, key: 'SecondName', mapper: upperCaseMapper},\n            {row: 3, col: 1, key: 'Age', mapper: Number.parseInt},\n            // three fields based on one cell but with different mapper\n            {row: 2, col: 3, key: 'EmployedIn'},\n            {row: 2, col: 3, key: 'IsUnemployed', mapper: isEmpty},\n            {row: 2, col: 3, key: 'IsEmployed', mapper: isFilled},\n            // custom mappers defined above\n            {row: 2, col: 3, key: 'isMale', mapper: isMale},\n            {row: 2, col: 3, key: 'isFemale', mapper: isFemale},\n        ]\n    },\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"5-import-data",children:"5. Import data"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const factory = new ImporterFactory();\n\n//...\n\n// for filePath:\nconst importer = await factory.from(filePath);\n\n// for buffer:\n// const importer = await factory.fromBuffer(buffer);\n\nconst books = importer.getAllItems<Book[]>(config.books); // it returns `Book[]`\nconst book = importer.getFirstItem<Book>(config.books); // it returns first `Book` item\nconst author = importer.getFirstItem<Person>(config.owner); // it returns `Person`\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"command-line-interface-cli",children:"Command Line Interface (CLI)"}),"\n",(0,r.jsxs)(n.p,{children:["It is possible to use the command line interface ",(0,r.jsx)(n.a,{href:"/docs/xlsx-import/cli",children:"read more about xlsx-import-cli"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(n.p,{children:["Example integrations with ",(0,r.jsx)(n.code,{children:"xlsx-import"})," are placed in ",(0,r.jsx)(n.a,{href:"https://github.com/Siemienik/XToolSet-examples/tree/master/",children:"Siemienik/XToolset-examples"})," directory. Currently, available:"]}),"\n",(0,r.jsx)(n.h3,{id:"frontend-frameworks",children:"Frontend frameworks"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Siemienik/XToolSet-examples/tree/master/xlsx-import%2Bvue",children:"Vue sample"})," - it is a web app created with Vue that displays parsed xlsx file."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Siemienik/XToolSet-examples/tree/master/xlsx-import%2Breact",children:"React sample"})," - it is a web app created with React that displays parsed xlsx file."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Siemienik/XToolSet-examples/tree/master/xlsx-import%2Bangular",children:"Angular sample"})," - it is a web app created with Angular that displays parsed xlsx file."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"console--cli",children:"Console / CLI"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Siemienik/XToolSet-examples/tree/master/xlsx-import%2Bnodejs",children:"NodeJS sample"})," of ",(0,r.jsx)(n.strong,{children:"importing an invoice"})," - it is pure JS example which runs on nodejs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Siemienik/XToolSet-examples/tree/master/xlsx-import%2Bnodejs%2Bts",children:"NodeJS + TS sample"})," of ",(0,r.jsx)(n.strong,{children:"importing an invoice"})," - it is Typescript example that can be transpiled down to pure JS or run directly with ts-node."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Siemienik/XToolSet-examples/tree/master/xlsx-import-cli",children:"Command line of xlsx-import"}),"  examples with prepared scripts based on cli version of xlsx-import."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"backend",children:"Backend"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Siemienik/XToolSet/tree/master/xlsx-import%2Bexpress",children:"ExpressJS sample"})," - it is a small service created with ExpressJS can parse xlsx files with concrete structure"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"the-configuration",children:"The Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["Xlsx supports two modes of importing files: ",(0,r.jsx)(n.a,{href:"#type-listvertical",children:"Vertical List"})," and ",(0,r.jsx)(n.a,{href:"#type-singleobject",children:"Single Object"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const cfg = {\n    // Indicates which worksheet should be used for data source .\n    // For CSV typically `sheet 1` works perfectly.\n    // string, required.\n    worksheet:'sheet 1',\n\n    // Indicates importing strategy, described below\n    type : 'object' // or 'list'\n\n    // ... type required fields, read below\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"worksheet"})})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["(string, required) Indicates which worksheet should be used for data source. For CSV typically ",(0,r.jsx)(n.code,{children:"sheet 1"})," works perfectly."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"types"})})}),"\n"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.th,{children:["Enum ",(0,r.jsx)(n.code,{children:"ImportType"})]}),(0,r.jsx)(n.th,{children:"Raw values"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"Default:"})," ",(0,r.jsx)("br",{}),(0,r.jsx)(n.code,{children:"List"}),", aliases: ",(0,r.jsx)(n.code,{children:"ListVertical"}),",  ",(0,r.jsx)(n.code,{children:"Vertical"})]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"list"}),", ",(0,r.jsx)(n.code,{children:"list-vertical"}),", ",(0,r.jsx)(n.code,{children:"vertical"})]}),(0,r.jsxs)(n.td,{children:["Used to import list of objects from worksheet reading from top to down (row by row). Each field has to defined column index (",(0,r.jsx)(n.code,{children:"A"})," is ",(0,r.jsx)(n.code,{children:"1"}),", ",(0,r.jsx)(n.code,{children:"B"})," is ",(0,r.jsx)(n.code,{children:"2"})," ... etc.). Fallback mechanism use this option for incorrect ",(0,r.jsx)(n.code,{children:"type"})," value (warn message will be printed)."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"Object"}),", aliases: ",(0,r.jsx)(n.code,{children:"Single"}),",  ",(0,r.jsx)(n.code,{children:"Singleton"})]}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"object"}),", ",(0,r.jsx)(n.code,{children:"single"}),", ",(0,r.jsx)(n.code,{children:"singletion"})]}),(0,r.jsx)(n.td,{children:"Used to import single object from worksheet. Each field has to has defined row&col index."})]})]})]}),"\n",(0,r.jsxs)(n.h3,{id:"type-listvertical",children:["Type: ",(0,r.jsx)(n.code,{children:"ListVertical"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"For type values:"})," ",(0,r.jsx)(n.code,{children:"list"}),", ",(0,r.jsx)(n.code,{children:"list-vertical"}),", ",(0,r.jsx)(n.code,{children:"vertical"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ListVertical"})," iterates each row after ",(0,r.jsx)(n.code,{children:"offset"})," and read data by using configured columns indexes."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const cfg = {\n    worksheet:'sheet 1',\n    type : 'list',\n\n    // How many rows should omit, default 0\n    rowOffset: 1,\n\n    // Configure columns\n    columns: [\n        {\n            // Column index (1,2,3....n); `1` for column `A`\n            index: 1,\n\n            // Indicade where in imported object data should be placed\n            key: 'id',\n\n            // A function which allow us to map a result field.\n            // The xlsx-importer has build-in mappers, @see #Mappers\n            mapper: (v: string) => Number.parseInt(v)\n        },\n        /* more columns ... */\n    ],\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"type-singleobject",children:["Type: ",(0,r.jsx)(n.code,{children:"SingleObject"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"For type values:"})," ",(0,r.jsx)(n.code,{children:"object"}),", ",(0,r.jsx)(n.code,{children:"single"}),", ",(0,r.jsx)(n.code,{children:"singletion"})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"SingleObject"})," do ",(0,r.jsx)(n.strong,{children:"not"})," iterate through the worksheet. It picks data from specific targets configured in the field: ",(0,r.jsx)(n.code,{children:"fields"}),". It always produces exactly one object."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const cfg = {\n    worksheet:'sheet 1',\n    type : 'object',\n\n    // configure fields\n    fields: [\n        {\n            // Specify column index. Indexing starts from 1. That means, `1` is `A`, `2` is `B`, etc...\n            // Indicade row index. Row indexing starts from 1, index 0 doesn't exist.\n            // This example target into `A2`.\n            col: 2, row: 2,\n\n            // Indicade where in imported object data should be placed\n            key: 'secondName',\n\n            // A function which allow us to map a result field.\n            // The xlsx-importer has build-in mappers, @see #Mappers\n            // Below implemented mapper, which makes upper first letter.\n            mapper: (v: string) => v.replace(/^[a-z]/, (match) => match.toUpperCase() )\n        },\n        /* more fields ... */\n    ],\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"mappers",children:"Mappers"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Exported Name"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"upperCaseMapper"}),(0,r.jsx)(n.td,{children:"Transforms string to upper case"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"lowerCaseMapper"}),(0,r.jsx)(n.td,{children:"Transforms string to lower case"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#jsonmapper",children:"jsonMapper"})}),(0,r.jsx)(n.td,{children:"Transforms a JSON string to a JSON object or to null if parsing was not possible"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"integerMapper"}),(0,r.jsx)(n.td,{children:"Transforms string into integer"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"booleanMapper"}),(0,r.jsx)(n.td,{children:"Transforms string into boolean"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"numberMapper"}),(0,r.jsx)(n.td,{children:"Transforms string into number"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"dateMapper"}),(0,r.jsxs)(n.td,{children:["Transforms date string into ",(0,r.jsx)(n.code,{children:"Date"})," object"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"isValue"}),(0,r.jsx)(n.td,{children:"Examines if value is included in accepted values provided"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"isEmpty"}),(0,r.jsx)(n.td,{children:"Examines if input is empty"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"isFilled"}),(0,r.jsx)(n.td,{children:"Examines if input is not empty"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#splitmapper",children:"splitMapper"})}),(0,r.jsx)(n.td,{children:"Transforms string into array of items"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"splitmapper",children:(0,r.jsx)(n.code,{children:"splitMapper"})}),"\n",(0,r.jsxs)(n.p,{children:["Configurable and immutable ",(0,r.jsx)(n.strong,{children:"splitMapper"})," with possibility to use specific ",(0,r.jsx)(n.code,{children:"itemMapper<TReturnType>(mapper)"})," or ",(0,r.jsx)(n.code,{children:"separator(string)"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".separator(';'): SplitMapper"})," - set separator"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".itemMapper(itemMapper): SplitMapper"})," - set mapper for items,"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Setting separator or item mapper do not change origin mapper but create new one. As an item mapper may use also another ",(0,r.jsx)(n.code,{children:"splitMapper"})," like below:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Building a mapper\nconst sentenceSplitter = splitMapper.separator('. ');\nconst wordSplitter = splitMapper.separator(' ');\nconst wordsInSentencesMapper = sentenceSplitter.itemMapper<string[]>(wordSplitter);\n\n// Standalone usage:\nconst input = 'Lorem ipsum dolor sit amet. consectetur adipiscing elit. Nullam placerat massa nec efficir. ';\n\nconst result = wordsInSentencesMapper(input);\n// [\n//     ['Lorem', 'ipsum', 'dolor', 'sit', 'amet'],\n//     ['consectetur', 'adipiscing', 'elit'],\n//     ['Nullam', 'placerat', 'massa', 'nec', 'efficir'],\n//     ['']\n// ]\n\n\n// In a config:\n// {row: 3, col: 1, key: 'words', mapper: wordsInSentencesMapper},\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"jsonmapper",children:(0,r.jsx)(n.code,{children:"jsonMapper"})}),"\n",(0,r.jsx)(n.p,{children:"JSON Mapper transforming JSON string to a JSON object."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Building a mapper \nconst mapper: JsonMapper = jsonMapper;\n\n// Usage sample:\nconst jsonString: string = '{\"name\":\"John Doe\"}';\nconst result: object = mapper(jsonString); // { name: 'John Doe'}\n\n// JsonMapper returns default value (null) in case it could not parse the input\nconst invalidJsonString: string = 'invalid JSON';\nconst result: null = mapper(jsonString); // null\n"})}),"\n",(0,r.jsx)(n.p,{children:"The default value is customizable:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const mapper: JsonMapper = jsonMapper.default('My default value');\nconst invalidJsonString: string = 'invalid JSON';\nconst result: string = mapper(invalidJsonString); // 'My default value'\n"})}),"\n",(0,r.jsx)(n.h2,{id:"support",children:"Support"}),"\n",(0,r.jsx)(n.p,{children:"If any help needed, just feel free to create an issue. We will be really thankful for added links into stackoverflow topics if exists."}),"\n",(0,r.jsxs)(n.p,{children:["We are ready to provide paid support, in order that please contact me: ",(0,r.jsx)(n.a,{href:"mailto://hi@siemienik.pl",children:"hi@siemienik.pl"})," or ",(0,r.jsx)(n.a,{href:"mailto://support@siemienik.pl",children:"support@siemienik.pl"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"-browser-support",children:"\u2705 Browser Support"}),"\n",(0,r.jsxs)(n.p,{children:["Browser supporting has been proved for \u2705 ",(0,r.jsx)(n.em,{children:"Chrome"})," and \u2705 ",(0,r.jsx)(n.em,{children:"Firefox"})," in ",(0,r.jsx)(n.a,{href:"#frontend-frameworks",children:"Angular & Vue & React Examples"})," and theirs tests. Feel welcome to run examples by yourselves and check it."]}),"\n",(0,r.jsx)(n.h3,{id:"-nodejs-support",children:"\u2705 NodeJS Support"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"10"}),(0,r.jsx)(n.th,{children:"11"}),(0,r.jsx)(n.th,{children:"12"}),(0,r.jsx)(n.th,{children:"13"}),(0,r.jsx)(n.th,{children:"14"}),(0,r.jsx)(n.th,{children:"15"}),(0,r.jsx)(n.th,{children:"16"}),(0,r.jsx)(n.th,{children:"17"}),(0,r.jsx)(n.th,{children:"18"}),(0,r.jsx)(n.th,{children:"19"}),(0,r.jsx)(n.th,{children:"20"}),(0,r.jsx)(n.th,{children:"21"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"})]})})]})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>l});var r=s(7294);const i={},t=r.createContext(i);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);